name: Release

on:
  push:
    tags: 
      - 'v*'

jobs:  
  release-windows-executable:
    name: Release Windows executable
    runs-on: windows-latest
    steps:
#       - name: Cache Qt
#         id: cache-qt
#         uses: actions/cache@v1
#         with:
#           path: ../Qt
#           key: ${{ runner.os }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
#         with:
#           cached: ${{ steps.cache-qt.outputs.cache-hit }}
      
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: |
          dir
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          nmake clean
          qmake -config release
          nmake
          dir release
          windeployqt --release --verbose 2 ./release/CleanGSUI.exe
          tar -c -f release.zip release
          dir release
        shell: cmd
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Upload Windows executable
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip
